{"version":3,"file":"service-worker.js","sources":["../service-worker.js"],"sourcesContent":["/* ------------------------------------------------------------------\r\n   OS-DPI – minimal, bullet-proof PWA worker\r\n   • No wild-cards\r\n   • Network-first, cache-fallback strategy\r\n------------------------------------------------------------------- */\r\n\r\nconst CACHE = \"osdpi-v1\";\r\n\r\n/* exact files we really need offline */\r\nconst PRECACHE = [\r\n  \"/\",                       // index.html\r\n  \"/index.html\",\r\n  \"/client.html\",\r\n  \"/service-worker.js\",\r\n  \"/css/site.css\",\r\n  // add more built files here IF you need them offline\r\n];\r\n\r\n/* ---------- install ----------------------------------------------------- */\r\nself.addEventListener(\"install\", (evt) => {\r\n  evt.waitUntil(\r\n    caches.open(CACHE)\r\n      .then((c) => c.addAll(PRECACHE))\r\n      .catch((err) => console.warn(\"SW precache failed:\", err))\r\n      .then(() => self.skipWaiting())\r\n  );\r\n});\r\n\r\n/* ---------- activate ---------------------------------------------------- */\r\nself.addEventListener(\"activate\", (evt) => {\r\n  evt.waitUntil(\r\n    caches.keys().then((keys) =>\r\n      Promise.all(keys.map((k) => (k !== CACHE ? caches.delete(k) : undefined)))\r\n    )\r\n  );\r\n  self.clients.claim();\r\n});\r\n\r\n/* ---------- fetch ------------------------------------------------------- */\r\nself.addEventListener(\"fetch\", (evt) => {\r\n  const { request } = evt;\r\n\r\n  /* only cache same-origin GET over http/https */\r\n  if (\r\n    request.method !== \"GET\" ||\r\n    !request.url.startsWith(self.location.origin)\r\n  ) {\r\n    return;                          // just let it pass through\r\n  }\r\n\r\n  evt.respondWith(\r\n    fetch(request)\r\n      .then((netResp) => {\r\n        const clone = netResp.clone();\r\n        caches.open(CACHE).then((c) => c.put(request, clone));\r\n        return netResp;\r\n      })\r\n      .catch(() => caches.match(request))\r\n  );\r\n});\r\n\r\n\r\n/* ---------- messages ---------------------------------------------------- */\r\nself.addEventListener(\"message\", (evt) => {\r\n  if (evt.data === \"SKIP_WAITING\") self.skipWaiting();\r\n});\r\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAK,GAAG,UAAU,CAAC;AACzB;AACA;AACA,MAAM,QAAQ,GAAG;AACjB,EAAE,GAAG;AACL,EAAE,aAAa;AACf,EAAE,cAAc;AAChB,EAAE,oBAAoB;AACtB,EAAE,eAAe;AACjB;AACA,CAAC,CAAC;AACF;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,GAAG,KAAK;AAC1C,EAAE,GAAG,CAAC,SAAS;AACf,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACtB,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACtC,OAAO,KAAK,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;AAC/D,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AACrC,GAAG,CAAC;AACJ,CAAC,CAAC,CAAC;AACH;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,GAAG,KAAK;AAC3C,EAAE,GAAG,CAAC,SAAS;AACf,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI;AAC5B,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AAChF,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC;AACH;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK;AACxC,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;AAC1B;AACA;AACA,EAAE;AACF,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK;AAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACjD,IAAI;AACJ,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,GAAG,CAAC,WAAW;AACjB,IAAI,KAAK,CAAC,OAAO,CAAC;AAClB,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK;AACzB,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AACtC,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9D,QAAQ,OAAO,OAAO,CAAC;AACvB,OAAO,CAAC;AACR,OAAO,KAAK,CAAC,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACzC,GAAG,CAAC;AACJ,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,GAAG,KAAK;AAC1C,EAAE,IAAI,GAAG,CAAC,IAAI,KAAK,cAAc,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;AACtD,CAAC,CAAC"}